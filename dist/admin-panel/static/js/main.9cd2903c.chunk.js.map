{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesFilters/heroesFilterSlice.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["useHttp","request","url","method","body","headers","fetch","response","ok","Error","status","json","data","heroesAdapter","createEntityAdapter","initialState","getInitialState","heroesLoadingStatus","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","reducers","heroCreated","state","action","addOne","payload","heroDeleted","removeOne","extraReducers","builder","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","heroes","filteredHeroesSelector","createSelector","filters","activeFilter","filter","item","element","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","onDelete","className","src","alt","style","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","id","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","filtersAdapter","filtersLoadingStatus","fetchFilters","a","heroesFiltersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","Node_ENV","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","getState","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","HeroesFilters","btnClass","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAAaA,EAAU,WAiBnB,MAAO,CAACC,QAhBK,uCAAG,WAAOC,GAAG,2FAA6E,OAA3EC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,CAAC,eAAgB,oBAAmB,kBAExEC,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,qBACN,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAU,KAAD,mBAGtDH,EAASI,OAAO,KAAD,GAAxB,OAAJC,EAAI,yBAEHA,GAAI,uGAIlB,gBAdY,wC,+BCEXC,EAAgBC,cAEhBC,EAAeF,EAAcG,gBAAgB,CAC/CC,oBAAqB,SAGZC,EAAcC,YACvB,sBACA,WAEI,OAAOlB,EADWD,IAAXC,SACQ,mCAIjBmB,EAAcC,YAAY,CAC5BC,KAAM,SACNP,eACAQ,SAAU,CACNC,YAAa,SAACC,EAAOC,GACjBb,EAAcc,OAAOF,EAAOC,EAAOE,UAEvCC,YAAa,SAACJ,EAAOC,GACjBb,EAAciB,UAAUL,EAAOC,EAAOE,WAG9CG,cAAe,SAACC,GACZA,EACKC,QAAQf,EAAYgB,SAAS,SAAAT,GAAUA,EAAMR,oBAAsB,aACnEgB,QAAQf,EAAYiB,WAAW,SAACV,EAAOC,GACpCD,EAAMR,oBAAsB,OAC5BJ,EAAcuB,OAAOX,EAAOC,EAAOE,YAEtCK,QAAQf,EAAYmB,UAAU,SAAAZ,GAC3BA,EAAMR,oBAAsB,WAE/BqB,gBAAe,kBAIrBC,EAAoBnB,EAApBmB,QAASC,EAAWpB,EAAXoB,QAETC,EAAa5B,EAAc6B,cAAa,SAAAjB,GAAK,OAAIA,EAAMkB,UAAvDF,UAEMG,EAAyBC,aAClC,SAACpB,GAAK,OAAKA,EAAMqB,QAAQC,eACzBN,GACA,SAACO,EAAQL,GACL,MAAc,QAAXK,EACQL,EAEAA,EAAOK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,UAAYF,QAK3CR,IAMXhB,GAEAe,EALAY,eAKAZ,EAJAa,cAIAb,EAHAc,oBAGAd,EAFAf,aACAK,EACAU,EADAV,Y,OCvBWyB,EAzCQ,SAAH,GAAgD,IAE5DC,EAFiBjC,EAAI,EAAJA,KAAMkC,EAAW,EAAXA,YAAaN,EAAO,EAAPA,QAASO,EAAQ,EAARA,SAIjD,OAAQP,GACJ,IAAK,OACDK,EAAmB,wBACnB,MACJ,IAAK,QACDA,EAAmB,yBACnB,MACJ,IAAK,OACDA,EAAmB,yBACnB,MACJ,IAAK,QACDA,EAAmB,2BACnB,MACJ,QACIA,EAAmB,yBAG3B,OACI,qBACIG,UAAS,kDAA6CH,GAAmB,UACzE,qBAAKI,IAAI,6EACJD,UAAU,0BACVE,IAAI,eACJC,MAAO,CAAC,UAAa,WAC1B,sBAAKH,UAAU,YAAW,UAEtB,oBAAIA,UAAU,aAAY,SAAEpC,IAC5B,mBAAGoC,UAAU,YAAW,SAAEF,OAE9B,sBAAMM,QAASL,EACdC,UAAU,wFAAuF,SAC9F,wBAAQK,KAAK,SAASL,UAAU,sBAAsBM,aAAW,gBC3BlEC,EARC,WACZ,OACI,qBAAKP,UAAU,8BAA8BQ,KAAK,SAAQ,SACtD,sBAAMR,UAAU,kBAAiB,SAAC,kBC+D/BS,G,MAxDI,WACf,IAAMC,EAAiBC,YAAYzB,GAC7B3B,EAAsBoD,aAAY,SAAA5C,GAAK,OAAIA,EAAMkB,OAAO1B,uBACxDqD,EAAWC,cACVtE,EAAWD,IAAXC,QAEPuE,qBAAU,WACNF,EAASpD,OAEV,IAEH,IAAMuC,EAAWgB,uBAAY,SAACC,GAC1BzE,EAAQ,gCAAD,OAAiCyE,GAAM,UACzCC,MAAK,SAAA/D,GAAI,OAAIgE,QAAQC,IAAIjE,EAAM,cAC/B+D,KAAKL,EAASzC,EAAY6C,KAC1BI,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QAE/B,CAAC9E,IAEJ,GAA4B,YAAxBgB,EACA,OAAO,cAAC,EAAO,IACZ,GAA4B,UAAxBA,EACP,OAAO,oBAAIyC,UAAU,mBAAkB,SAAC,0FAG5C,IAA0BsB,EAuBpBC,EAtBiB,KADGD,EAuBQZ,GAtBtBc,OAEA,cAACC,EAAA,EAAa,CACVC,QAAS,EACTC,WAAW,OAAM,SACjB,oBAAI3B,UAAU,mBAAkB,SAAC,uFAKtCsB,EAAIM,KAAI,YAAqB,IAAnBZ,EAAE,EAAFA,GAAOa,EAAK,sBACzB,OACI,cAACJ,EAAA,EAAa,CAEVC,QAAS,IACTC,WAAW,OAAM,SACjB,cAAC,EAAc,2BAAME,GAAK,IAAE9B,SAAU,kBAAMA,EAASiB,QAHhDA,MAUrB,OACI,cAACc,EAAA,EAAe,CAACC,UAAU,KAAI,SAC1BR,M,gBC3DPS,EAAiB5E,cAEjBC,EAAe2E,EAAe1E,gBAAgB,CAChD2E,qBAAsB,OACtB5C,aAAc,QAGL6C,EAAezE,YACxB,uBAAsB,sBACtB,8BAAA0E,EAAA,sDACkB,OADlB,EACsB7F,IAAXC,EAAO,EAAPA,QAAO,SACDA,EAAQ,iCAAgC,oFAIvD6F,EAAqBzE,YAAY,CACnCC,KAAM,UACNP,eACAQ,SAAU,CACNwE,eAAgB,SAACtE,EAAOC,GACpBD,EAAMsB,aAAerB,EAAOE,UAGpCG,cAAe,SAACC,GACZA,EACKC,QAAQ2D,EAAa1D,SAAS,SAAAT,GAAUA,EAAMkE,qBAAuB,aACrE1D,QAAQ2D,EAAazD,WAAW,SAACV,EAAOC,GACrCD,EAAMkE,qBAAuB,OAC7BD,EAAetD,OAAOX,EAAOC,EAAOE,YAEvCK,QAAQ2D,EAAavD,UAAU,SAAAZ,GAAUA,EAAMkE,qBAAuB,WACtErD,gBAAe,kBAIrBC,EAAoBuD,EAApBvD,QAEQC,EAFYsD,EAAXtD,QAIDC,EAAciD,EAAehD,cAAa,SAAAjB,GAAK,OAAIA,EAAMqB,WAAzDL,UAMXsD,GACAxD,EAJAyD,gBAIAzD,EAHA0D,eAGA1D,EAFA2D,qBAEA3D,EADAwD,gBC5CEI,EAAmB,WAAH,OAAS,SAACC,GAAI,OAAK,SAAC1E,GACtC,OACW0E,EADU,kBAAX1E,EACM,CACRqC,KAAMrC,GAGFA,MASD2E,EANDC,YAAe,CACzB9D,QAAS,CAACG,SAAQG,WAClByD,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,OAAON,IAClEO,SAAmC,eAAzBC,mIAAYC,WCsFXC,EA7FO,WAAO,IAAD,EACIC,mBAAS,IAAG,mBAArCC,EAAQ,KAAEC,EAAW,OACMF,mBAAS,IAAG,mBAAvCG,EAAS,KAAEC,EAAY,OACQJ,mBAAS,IAAG,mBAA3CK,EAAW,KAAEC,EAAc,KAE3BzB,EAAwBtB,aAAY,SAAA5C,GAAK,OAAIA,EAAMqB,WAAnD6C,qBACD7C,EAAUL,EAAU4D,EAAMgB,YAC1B/C,EAAWC,cACVtE,EAAWD,IAAXC,QAsCP,OACI,uBAAMyD,UAAU,+BAA+B4D,SArC3B,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAU,CACZ/C,GAAIgD,cACJpG,KAAMyF,EACNvD,YAAayD,EACb/D,QAASiE,GAGblH,EAAQ,+BAAgC,OAAQ0H,KAAKC,UAAUH,IAC1D9C,MAAK,SAAAkD,GAAG,OAAIjD,QAAQC,IAAIgD,EAAK,kGAC7BlD,KAAKL,EAAS9C,EAAYiG,KAC1B3C,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,MAE9BiC,EAAY,IACZE,EAAa,IACbE,EAAe,KAqB0D,UACrE,sBAAK1D,UAAU,OAAM,UACjB,uBAAOoE,QAAQ,OAAOpE,UAAU,kBAAiB,SAAC,2FAClD,uBACIqE,UAAQ,EACRhE,KAAK,OACLzC,KAAK,OACLoC,UAAU,eACVgB,GAAG,OACHsD,YAAY,8EACZC,MAAOlB,EACPmB,SAAU,SAACX,GAAC,OAAKP,EAAYO,EAAEY,OAAOF,aAG9C,sBAAKvE,UAAU,OAAM,UACjB,uBAAOoE,QAAQ,OAAOpE,UAAU,kBAAiB,SAAC,qDAClD,0BACIqE,UAAQ,EACRzG,KAAK,OACLoC,UAAU,eACVgB,GAAG,OACHsD,YAAY,sDACZnE,MAAO,CAAC,OAAU,SAClBoE,MAAOhB,EACPiB,SAAU,SAACX,GAAC,OAAKL,EAAaK,EAAEY,OAAOF,aAG/C,sBAAKvE,UAAU,OAAM,UACjB,uBAAOoE,QAAQ,UAAUpE,UAAU,aAAY,SAAC,yHAChD,yBACIqE,UAAQ,EACRrE,UAAU,cACVgB,GAAG,UACHpD,KAAK,UACL2G,MAAOd,EACPe,SAAU,SAACX,GAAC,OAAKH,EAAeG,EAAEY,OAAOF,QAAO,UAChD,wBAAQA,MAAM,GAAE,SAAC,0GAtDX,SAACnF,EAASpC,GAC5B,MAAe,YAAXA,EACO,iCAAQ,4GACG,UAAXA,EACA,iCAAQ,0FAGfoC,GAAWA,EAAQoC,OAAS,EACrBpC,EAAQwC,KAAI,YAAoB,IAAlBhE,EAAI,EAAJA,KAAM8G,EAAK,EAALA,MAEvB,GAAa,QAAT9G,EAEJ,OAAO,wBAAmB2G,MAAO3G,EAAK,SAAE8G,GAApB9G,WAL5B,EAgDa+G,CAAcvF,EAAS6C,SAIhC,wBAAQ5B,KAAK,SAASL,UAAU,kBAAiB,SAAC,mD,iBCtC3C4E,EAnDO,WAAO,IAAD,EAEqBjE,aAAY,SAAA5C,GAAK,OAAIA,EAAMqB,WAAjE6C,EAAoB,EAApBA,qBAAsB5C,EAAY,EAAZA,aACvBD,EAAUL,EAAU4D,EAAMgB,YAC1B/C,EAAWC,cAOjB,GALAC,qBAAU,WACNF,EAASsB,OAEV,IAE0B,YAAzBD,EACA,OAAO,cAAC,EAAO,IACZ,GAA6B,UAAzBA,EACP,OAAO,oBAAIjC,UAAU,mBAAkB,SAAC,0FAG5C,IAAuBsB,EAoBjBC,EAnBiB,KADAD,EAoBQlC,GAnBnBoC,OACG,oBAAIxB,UAAU,mBAAkB,SAAC,uGAGrCsB,EAAIM,KAAI,YAA+B,IAA7BhE,EAAI,EAAJA,KAAMoC,EAAS,EAATA,UAAW0E,EAAK,EAALA,MAExBG,EAAWlD,IAAW,MAAO3B,EAAW,CAC1C,OAAUpC,IAASyB,IAGvB,OAAO,wBAEK2B,GAAIpD,EACJoC,UAAW6E,EACXzE,QAAS,kBAAMQ,EAASyB,EAAezE,KAAO,SAC5C8G,GAJG9G,MAUzB,OACI,qBAAKoC,UAAU,sBAAqB,SAChC,sBAAKA,UAAU,YAAW,UACtB,mBAAGA,UAAU,YAAW,SAAC,sLACzB,qBAAKA,UAAU,YAAW,SACrBuB,UC/BNuD,G,MAfH,WAER,OACI,sBAAM9E,UAAU,MAAK,SACjB,sBAAKA,UAAU,UAAS,UACpB,cAAC,EAAU,IACX,sBAAKA,UAAU,uBAAsB,UACjC,cAAC,EAAa,IACd,cAAC,EAAa,c,MCLlC+E,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,IAAQ,CAACtC,MAAOA,EAAM,SACrB,cAAC,EAAG,QAGRuC,SAASC,eAAe,W","file":"static/js/main.9cd2903c.chunk.js","sourcesContent":["export const useHttp = () => {\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { createSlice, createAsyncThunk, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst heroesAdapter = createEntityAdapter();\r\n\r\nconst initialState = heroesAdapter.getInitialState({\r\n    heroesLoadingStatus: 'idle'\r\n})\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/fetchHeroes',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request('http://localhost:3001/heroes')\r\n    }\r\n)\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n            heroesAdapter.addOne(state, action.payload)\r\n        },\r\n        heroDeleted: (state, action) => {\r\n            heroesAdapter.removeOne(state, action.payload)\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                heroesAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {\r\n                state.heroesLoadingStatus = 'error';\r\n            })\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nconst {selectAll} = heroesAdapter.getSelectors(state => state.heroes);\r\n\r\nexport const filteredHeroesSelector = createSelector(\r\n    (state) => state.filters.activeFilter,\r\n    selectAll,\r\n    (filter, heroes) => {\r\n        if(filter === 'all') {\r\n            return heroes;\r\n        } else {\r\n            return heroes.filter(item => item.element === filter)\r\n        }\r\n    }\r\n)\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted\r\n} = actions;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span onClick={onDelete}\n             className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport { heroDeleted, fetchHeroes, filteredHeroesSelector } from './heroesSlice';\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n    const filteredHeroes = useSelector(filteredHeroesSelector);\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes());\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filtersAdapter = createEntityAdapter();\r\n\r\nconst initialState = filtersAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n})\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request('http://localhost:3001/filters')\r\n    }\r\n)\r\n\r\nconst heroesFiltersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filtersAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'})\r\n            .addDefaultCase(()=> {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesFiltersSlice;\r\n\r\nexport default reducer;\r\n\r\nexport const { selectAll } = filtersAdapter.getSelectors(state => state.filters);\r\n\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;","import { configureStore } from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice'\nimport filters from '../components/heroesFilters/heroesFilterSlice'\n\nconst stringMiddleware = () => (next) => (action) => {\n    if(typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action);\n};\n\nconst store = configureStore({\n    reducer: {heroes, filters},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.Node_ENV !== 'production'\n})\n\nexport default store;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport store from '../../store';\nimport { heroCreated } from '../heroesList/heroesSlice';\nimport { selectAll } from '../heroesFilters/heroesFilterSlice';\n\nconst HeroesAddForm = () => {\nconst [heroName, setHeroName] = useState('');\nconst [heroDescr, setHeroDescr] = useState('');\nconst [heroElement, setHeroElement] = useState('');\n\nconst {filtersLoadingStatus} = useSelector(state => state.filters);\nconst filters = selectAll(store.getState())\nconst dispatch = useDispatch();\nconst {request} = useHttp();\n\nconst onSubmitHandler = (e) => {\n    e.preventDefault();\n    const newHero = {\n        id: uuidv4(),\n        name: heroName,\n        description: heroDescr,\n        element: heroElement\n    }\n\n    request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n        .then(res => console.log(res, 'Отправка успешна'))\n        .then(dispatch(heroCreated(newHero)))\n        .catch(err => console.log(err));\n\n    setHeroName('');\n    setHeroDescr('');\n    setHeroElement('');\n}\n\nconst renderFilters = (filters, status) => {\n    if (status === \"loading\") {\n        return <option>Загрузка элементов</option>\n    } else if (status === \"error\") {\n        return <option>Ошибка загрузки</option>\n    }\n    \n    if (filters && filters.length > 0 ) {\n        return filters.map(({name, label}) => {\n            // eslint-disable-next-line\n            if (name === 'all')  return;\n\n            return <option key={name} value={name}>{label}</option>\n        })\n    }\n}\n\nreturn (\n    <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n        <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n            <input \n                required\n                type=\"text\" \n                name=\"name\" \n                className=\"form-control\" \n                id=\"name\" \n                placeholder=\"Как меня зовут?\"\n                value={heroName}\n                onChange={(e) => setHeroName(e.target.value)}/>\n        </div>\n\n        <div className=\"mb-3\">\n            <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n            <textarea\n                required\n                name=\"text\" \n                className=\"form-control\" \n                id=\"text\" \n                placeholder=\"Что я умею?\"\n                style={{\"height\": '130px'}}\n                value={heroDescr}\n                onChange={(e) => setHeroDescr(e.target.value)}/>\n        </div>\n\n        <div className=\"mb-3\">\n            <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n            <select \n                required\n                className=\"form-select\" \n                id=\"element\" \n                name=\"element\"\n                value={heroElement}\n                onChange={(e) => setHeroElement(e.target.value)}>\n                <option value=\"\">Я владею элементом...</option>\n                {renderFilters(filters, filtersLoadingStatus)}\n            </select>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n    </form>\n)\n}\n\nexport default HeroesAddForm;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { filtersChanged, fetchFilters, selectAll } from \"./heroesFilterSlice\";\nimport Spinner from '../spinner/Spinner';\nimport store from '../../store';\n\nconst HeroesFilters = () => {\n\n    const {filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const filters = selectAll(store.getState());\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchFilters());\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}