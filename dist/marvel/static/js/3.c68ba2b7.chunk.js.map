{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","prices","price","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration"],"mappings":"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","file":"static/js/3.c68ba2b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250 px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=''/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n        \r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n\r\n            return data\r\n        \r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, error, request, clearError};\r\n}\r\n\r\nexport default useHttp;\r\n","import useHttp from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n    const _apiKey = \"apikey=42e09bced1848d4ec4fd4dc5a818c5f2\";\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : \"No Description, Sorry!\",\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"No Description, Sorry!\",\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comics.textObjects.language || 'en-us',\r\n            prices: comics.prices.price ? `${comics.prices.price}$` : 'Not Available'\r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComics}\r\n}\r\n\r\nexport default useMarvelService","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(\"\");\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId);\n        }\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n}\n\n    const View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n        setCharList([...charList, ...newCharList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    };\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \"http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif\") {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                        props.onCharSelected(item.id);\n                        focusOnItem(i);\n                    }}\n                    onKeyPress={(e) => {\n                        if(e.key === \" \" || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n    \n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n            className=\"button button__main button__long\" \n            disabled={newItemLoading}\n            style={{'display': charEnded ? \"none\" : 'block'}}\n            onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    useEffect(() => {\n        updateChar()\n    }, [props.charId])\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n        \n        clearError()\n        getCharacter(charId)\n        .then(onCharLoaded)\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">{description}</div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\n                    {\n                        comics.map((item, i) => {\n                            // eslint-disable-next-line\n                            if (i > 9) return;\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                 </li>\n                            )\n                        }) \n                    }\n\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.string\n}\n\nexport default CharInfo;","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state =  {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}